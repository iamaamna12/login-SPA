{"ast":null,"code":"export const mockFetch = (url, options) => {\n  return new Promise(resolve => {\n    setTimeout(() => {\n      const {\n        email,\n        password\n      } = JSON.parse(options.body);\n      if (email === \"test@example.com\" && password === \"password123\") {\n        resolve({\n          ok: true\n        });\n      } else {\n        resolve({\n          ok: false\n        });\n      }\n    }, 1000);\n  });\n};","map":{"version":3,"names":["mockFetch","url","options","Promise","resolve","setTimeout","email","password","JSON","parse","body","ok"],"sources":["/Users/iamaamna/30NitesOfCode/login-SPA/my-login-app/src/mockFetch.js"],"sourcesContent":["export const mockFetch = (url, options) => {\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        const { email, password } = JSON.parse(options.body);\n  \n        if (email === \"test@example.com\" && password === \"password123\") {\n          resolve({ ok: true });\n        } else {\n          resolve({ ok: false });\n        }\n      }, 1000);\n    });\n  };\n  "],"mappings":"AAAA,OAAO,MAAMA,SAAS,GAAGA,CAACC,GAAG,EAAEC,OAAO,KAAK;EACvC,OAAO,IAAIC,OAAO,CAAEC,OAAO,IAAK;IAC9BC,UAAU,CAAC,MAAM;MACf,MAAM;QAAEC,KAAK;QAAEC;MAAS,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACP,OAAO,CAACQ,IAAI,CAAC;MAEpD,IAAIJ,KAAK,KAAK,kBAAkB,IAAIC,QAAQ,KAAK,aAAa,EAAE;QAC9DH,OAAO,CAAC;UAAEO,EAAE,EAAE;QAAK,CAAC,CAAC;MACvB,CAAC,MAAM;QACLP,OAAO,CAAC;UAAEO,EAAE,EAAE;QAAM,CAAC,CAAC;MACxB;IACF,CAAC,EAAE,IAAI,CAAC;EACV,CAAC,CAAC;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}