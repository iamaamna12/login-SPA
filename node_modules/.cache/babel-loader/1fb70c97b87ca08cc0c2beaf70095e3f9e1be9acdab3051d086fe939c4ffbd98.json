{"ast":null,"code":"var _jsxFileName = \"/Users/iamaamna/30NitesOfCode/login-SPA/my-login-app/src/LoginForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./LoginForm.css\";\nimport { mockFetch } from \"./mockFetch\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginForm = () => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setMessage(\"Logging in...\");\n    try {\n      const response = await mockFetch(\"/api/login\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      if (response.ok) {\n        setMessage(\"✅ Login successful!\");\n      } else {\n        setMessage(\"❌ Invalid email or password.\");\n      }\n    } catch (err) {\n      setMessage(\"⚠️ Something went wrong. Try again later.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"login-form\",\n    \"aria-label\": \"Login Form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"email\",\n      children: \"Email address\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"email\",\n      type: \"email\",\n      name: \"email\",\n      required: true,\n      value: email,\n      onChange: e => setEmail(e.target.value),\n      \"aria-describedby\": \"emailHelp\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n      id: \"emailHelp\",\n      children: \"We'll never share your email.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"password\",\n      children: \"Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"password\",\n      type: \"password\",\n      name: \"password\",\n      required: true,\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Sign In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      role: \"alert\",\n      className: \"message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginForm, \"s7C0CXXiuUHhlRlvkNKOC498sg0=\");\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","mockFetch","jsxDEV","_jsxDEV","LoginForm","_s","email","setEmail","password","setPassword","message","setMessage","handleSubmit","e","preventDefault","response","method","body","JSON","stringify","ok","err","onSubmit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","type","name","required","value","onChange","target","role","_c","$RefreshReg$"],"sources":["/Users/iamaamna/30NitesOfCode/login-SPA/my-login-app/src/LoginForm.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./LoginForm.css\";\nimport { mockFetch } from \"./mockFetch\";\n\nconst LoginForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setMessage(\"Logging in...\");\n\n    try {\n      const response = await mockFetch(\"/api/login\", {\n        method: \"POST\",\n        body: JSON.stringify({ email, password }),\n      });\n\n      if (response.ok) {\n        setMessage(\"✅ Login successful!\");\n      } else {\n        setMessage(\"❌ Invalid email or password.\");\n      }\n    } catch (err) {\n      setMessage(\"⚠️ Something went wrong. Try again later.\");\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"login-form\" aria-label=\"Login Form\">\n      <h1>Login</h1>\n\n      <label htmlFor=\"email\">Email address</label>\n      <input\n        id=\"email\"\n        type=\"email\"\n        name=\"email\"\n        required\n        value={email}\n        onChange={(e) => setEmail(e.target.value)}\n        aria-describedby=\"emailHelp\"\n      />\n      <small id=\"emailHelp\">We'll never share your email.</small>\n\n      <label htmlFor=\"password\">Password</label>\n      <input\n        id=\"password\"\n        type=\"password\"\n        name=\"password\"\n        required\n        value={password}\n        onChange={(e) => setPassword(e.target.value)}\n      />\n\n      <button type=\"submit\">Sign In</button>\n\n      {message && <div role=\"alert\" className=\"message\">{message}</div>}\n    </form>\n  );\n};\n\nexport default LoginForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}